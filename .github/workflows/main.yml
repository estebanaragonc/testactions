name: BrowserStack Test

on:
  workflow_dispatch:
    inputs:
      choise_option:
        description: 'Execution Type'
        required: true
        type: choice
        options:
          - release execution
          - spec execution
          - local execution
      release_string:
        description: 'Release/Spec Path'
        required: false
        type: string
      test_type:
        description: 'Test Type'
        required: false
        type: choice
        options:
          - all
          - ui
          - api
      test_suite:
        description: 'Test Suite'
        required: false
        type: choice
        options:
          - all
          - regression
          - smoke
      test_env:
        description: 'Test Environment'
        required: false
        type: choice
        options:
          - dev
          - qa
          - test

env:
  TEST_RELEASE: ${{ github.event.inputs.release_string }}
  TEST_TYPE: ${{ github.event.inputs.test_type }}
  TEST_SUITE: ${{ github.event.inputs.test_suite }}
  TEST_ENV: ${{ github.event.inputs.test_env }}

jobs:
  browserstack:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm install

      - name: Run Cypress Tests on BrowserStack
        run: |
          if [ "${{ github.event.inputs.choise_option }}" == "release execution" ]; then
            npx browserstack-cypress run --sync
          elif [ "${{ github.event.inputs.choise_option }}" == "spec execution" ]; then
            npx browserstack-cypress run --sync --specs "${{ github.event.inputs.release_string }}" --env TEST_ENV=$TEST_ENV
          else
            if [ -n "${{ github.event.inputs.release_string }}" ]; then
              npx cypress run --env TEST_ENV=$TEST_ENV --spec "$TEST_RELEASE"
            else
              npx cypress run --env TEST_ENV=$TEST_ENV
            fi

            if [ "${{ github.event.inputs.test_suite }}" == "regression" ]; then
              if [ "${{ github.event.inputs.test_type }}" == "all" ]; then
                npx cypress run --env TEST_ENV=$TEST_ENV --env grep="@regression"
              elif [ "${{ github.event.inputs.test_type }}" == "ui" ]; then
                npx cypress run --env TEST_ENV=$TEST_ENV --env grep="@regression"
              elif [ "${{ github.event.inputs.test_type }}" == "api" ]; then
                npx cypress run --env TEST_ENV=$TEST_ENV --env grep="@regression" --spec "cypress/tests/api/**/*.api.test.ts"
              fi
            elif [ "${{ github.event.inputs.test_suite }}" == "smoke" ]; then
              if [ "${{ github.event.inputs.test_type }}" == "all" ]; then
                npx cypress run --env TEST_ENV=$TEST_ENV --env grep="@smoke"
              elif [ "${{ github.event.inputs.test_type }}" == "ui" ]; then
                npx cypress run --env TEST_ENV=$TEST_ENV --env grep="@smoke"
              elif [ "${{ github.event.inputs.test_type }}" == "api" ]; then
                npx cypress run --
